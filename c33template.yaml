AWSTemplateFormatVersion: '2010-09-09'
Description: Cloud Computing Assignment 3 AWS CloudFormation Template
Resources:
  emails3send:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: PublicRead
  BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      BucketName: "emails3send"
      PolicyDocument:
        Id: emails3sendPolicy
        Version: '2012-10-17'
        Statement:
          - Sid: PublicReadForGetBucketObjects
            Effect: Allow
            Principal: '*'
            Action: s3:GetObject
            Resource: !Join
              - ''
              - - 'arn:aws:s3:::'
                - !Ref 'emails3send'
                - /*
      Bucket: !Ref 'emails3send'
  ExecutionRoleLambda:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: lambdaLFPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: '*'
                Resource: '*'
  LF:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: "LF"
      Handler: index.lambda_handler
      Role: !GetAtt 'ExecutionRoleLambda.Arn'
      Code:
        ZipFile: "import json \n def lambda_handler(event, context):\n  Test = \"Lambda LF Up!\"\n  return Test\n"
      Runtime: python3.8
      Timeout: 5
      TracingConfig:
        Mode: Active
  NotebookInstancecc3:
    Type: AWS::SageMaker::NotebookInstance
    Properties:
      InstanceType: ml.t3.medium
      RoleArn: !GetAtt 'ExecutionRole.Arn'
  ExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - sagemaker.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: '*'
                Resource: '*'
Outputs:
  S3BucketSecureURL:
    Value: !Join
      - ''
      - - https://
        - !GetAtt 'emails3send.DomainName'
    Description: Name of S3 bucket to hold email content
  NotebookInstanceId:
    Value: !Ref 'NotebookInstancecc3'
